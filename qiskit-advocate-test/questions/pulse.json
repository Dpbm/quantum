{
    "activity": "poll",
    "instructors": [
        "JunyeHuang"
    ],
    "results_filename": "answers/pulse.results",
    "items": [
        {
            "id": "1",
            "question": "<h4>When do you want to use Qiskit Pulse?</h4>",
            "type": "multiple choice",
            "options": [
                "Performing better calibrations on qubits",
                "Measuring coherence time T1 and T2",
                "Getting optimized gate errors",
                "Accessing higher energy states of transmon qubits",
                "All of the above"
            ]
        },
        {
            "id": "2",
            "question": "<h4>Which kind of <samp>Channel</samp> is used for collecting measurement data?</h4>",
            "type": "multiple choice",
            "options": [
                "DriveChannel",
                "MeasureChannel",
                "AcquireChannel",
                "ControlChannel",
                "None of the above"
            ]
        },
        {
            "id": "3",
            "question": "<h4>Which kind of <samp>Pulse</samp> waveforms is used to reduce the chance of leakage to higher energy states of transmon qubits?</h4>",
            "type": "multiple choice",
            "options": [
                "Constant",
                "Drag",
                "Gaussian",
                "GaussianSquare",
                "None of the above"
            ]
        },
        {
            "id": "4",
            "question": "<h4>What is the possible goal of the following <samp>Pulse</samp> experiment?<br /><br /><p>schedule = pulse.Schedule()<br />schedule += Play(drive_pulse, drive_chan)<br />schedule += measure << schedule.duration<br />schedule_frequencies = [{drive_chan: freq} for freq in frequencies_Hz]<br /><br />experiment_program = assemble(schedule, backend=backend, meas_level=1, meas_return='avg', shots=num_shots_per_frequency, schedule_los=schedule_frequencies)<br /></p></h4>",
            "type": "multiple choice",
            "options": [
                "Finding the qubit frequency",
                "Performing a Rabi experiment",
                "Measuring T1",
                "Measuring T2",
                "None of the above"
            ]
        },
        {
            "id": "5",
            "question": "<h4>What is the possible goal of the following <samp>Pulse</samp> experiment?<br /><br /><p>schedules = []<br />for drive_amp in drive_amps:<br />pulse = pulse_lib.gaussian(duration=drive_samples, amp=drive_amp, sigma=drive_sigma, name=f'Drive amplitude = {drive_amp}')<br />this_schedule = pulse.Schedule(name=f'Drive amplitude = {drive_amp}')<br />this_schedule += Play(pulse, drive_chan)<br />this_schedule += measure << this_schedule.duration<br />schedules.append(this_schedule)<br />experiment_program = assemble(schedules, backend=backend, meas_level=1, meas_return='avg', shots=num_shots_per_point, schedule_los=[{drive_chan: rough_qubit_frequency}] * num_points)</p></h4>",
            "type": "multiple choice",
            "options": [
                "Finding the qubit frequency",
                "Performing a Rabi experiment",
                "Measuring T1",
                "Measuring T2",
                "None of the above"
            ]
        }
    ]
}